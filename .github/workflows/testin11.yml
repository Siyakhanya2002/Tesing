name: Deploy TimesheetDB and SSIS Package with SQL Agent Job

on:
  push:
    branches:
      - main
    paths:
      - 'Database/**'
  workflow_dispatch:

env:
  SSIS_FOLDER_NAME: Timesheet
  SSIS_PROJECT_NAME: Integration Services Project1
  SSIS_PACKAGE_NAME: MigrateExcelData.dtsx
  SQL_AGENT_JOB_NAME: RunTimesheetMigration

jobs:
  deploy-and-schedule:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Deploy TimesheetDB using Windows authentication
    - name: Deploy TimesheetDB
      shell: cmd
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
      run: |
        sqlcmd -S "%SQL_SERVER%" -E -i "Database\create_timesheetdb.sql"

    # Create SSISDB folder
    - name: Create SSIS folder if not exists
      shell: cmd
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SSIS_FOLDER_NAME: ${{ env.SSIS_FOLDER_NAME }}
      run: |
        echo USE SSISDB; > create_folder.sql
        echo IF NOT EXISTS (SELECT * FROM catalog.folders WHERE name = '%SSIS_FOLDER_NAME%') >> create_folder.sql
        echo BEGIN >> create_folder.sql
        echo   EXEC catalog.create_folder @folder_name = '%SSIS_FOLDER_NAME%'; >> create_folder.sql
        echo END >> create_folder.sql
        sqlcmd -S "%SQL_SERVER%" -E -i create_folder.sql

    # Check if ISPAC exists
    - name: Validate ISPAC file exists
      shell: cmd
      run: |
        if not exist "Database\bin\Development\Integration Services Project1.ispac" (
          echo ERROR: ISPAC file not found!
          exit /b 1
        )

    # Deploy SSIS package using ISDeploymentWizard
    - name: Deploy SSIS package
      shell: cmd
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SSIS_FOLDER_NAME: ${{ env.SSIS_FOLDER_NAME }}
        SSIS_PROJECT_NAME: ${{ env.SSIS_PROJECT_NAME }}
      run: |
        echo Deploying SSIS package using ISDeploymentWizard...
        "C:\Program Files\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe" ^
          /Silent ^
          /SourcePath:"C:\Path\To\Database\bin\Development\Integration Services Project1.ispac" ^
          /DestinationServer:"localhost" ^
          /DestinationPath:"\SSISDB\Timesheet\Integration Services Project1" ^
          /ProjectName:"Integration Services Project1" ^
          /Overwrite
          

    # Create SQL Agent Job to run the package
    - name: Create SQL Agent Job
      shell: cmd
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SSIS_FOLDER_NAME: ${{ env.SSIS_FOLDER_NAME }}
        SSIS_PROJECT_NAME: ${{ env.SSIS_PROJECT_NAME }}
        SSIS_PACKAGE_NAME: ${{ env.SSIS_PACKAGE_NAME }}
        SQL_AGENT_JOB_NAME: ${{ env.SQL_AGENT_JOB_NAME }}
        EXCEL_PATH: ${{ secrets.EXCEL_PATH }}
      run: |
        echo USE msdb; > create_job.sql
        echo IF EXISTS (SELECT 1 FROM sysjobs WHERE name = '%SQL_AGENT_JOB_NAME%') BEGIN >> create_job.sql
        echo   EXEC sp_delete_job @job_name = '%SQL_AGENT_JOB_NAME%'; >> create_job.sql
        echo END >> create_job.sql
        echo EXEC sp_add_job @job_name = N'%SQL_AGENT_JOB_NAME%', @enabled = 1, @description = N'Runs SSIS package daily'; >> create_job.sql
        echo EXEC sp_add_jobstep @job_name = N'%SQL_AGENT_JOB_NAME%', @step_name = N'Run SSIS', >> create_job.sql
        echo   @subsystem = N'SSIS', >> create_job.sql
        echo   @command = N'/ISSERVER "\"\SSISDB\%SSIS_FOLDER_NAME%\%SSIS_PROJECT_NAME%\%SSIS_PACKAGE_NAME%\"" /SERVER "%SQL_SERVER%" /Par "ExcelFilePath";"%EXCEL_PATH%"', >> create_job.sql
        echo   @database_name = N'master'; >> create_job.sql
        echo EXEC sp_add_jobschedule @job_name = N'%SQL_AGENT_JOB_NAME%', @name = N'DailyRun', @freq_type = 4, @freq_interval = 1, @active_start_time = 010000; >> create_job.sql
        echo EXEC sp_add_jobserver @job_name = N'%SQL_AGENT_JOB_NAME%'; >> create_job.sql
        sqlcmd -S "%SQL_SERVER%" -E -i create_job.sql
