name: Deploy SSIS Project and Create Scheduled Jobs1

on:
  workflow_dispatch:

jobs:
  deploy-ssis-project:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy SSIS Project (.ispac)
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
        shell: powershell
        run: |
          echo "Deploying SSIS project..."
          $ispacPath = "Database/bin/Development/Integration Services Project1.ispac"
          if (!(Test-Path $ispacPath)) {
            Write-Error "ISPAC file not found at $ispacPath"
            exit 1
          }

          $deployArgs = @(
            "/Silent",
            "/SourcePath:`"$ispacPath`"",
            "/DestinationServer:`"$env:SQL_SERVER`"",
            "/DestinationPath:""/SSISDB/MySSISPackages/Integration Services Project1"""
          )

          $process = Start-Process `
            -FilePath "C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe" `
            -ArgumentList $deployArgs `
            -Wait `
            -PassThru `
            -NoNewWindow

          if ($process.ExitCode -ne 0) {
            Write-Error "Deployment failed with exit code $($process.ExitCode)"
            exit $process.ExitCode
          }

          echo "SSIS project deployed successfully."

      - name: Create SQL Agent Jobs with 1-Minute Schedule
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
        shell: powershell
        run: |
          echo "Creating SQL Agent Jobs to run every 1 minute..."

          $packages = @(
            "Stg_Months",
            "Load_stg_Leave",
            "ImportLeaveType",
            "ImportClient",
            "ImportEmployee",
            "ImportProject"
          )

          foreach ($pkg in $packages) {
            $jobName = "RunSSIS_$pkg"
            $scheduleName = "EveryMinute_$pkg"

            $jobScript = "
            USE msdb;

            -- Delete job if it exists
            IF EXISTS (SELECT * FROM msdb.dbo.sysjobs WHERE name = '$jobName')
            BEGIN
              EXEC msdb.dbo.sp_delete_job @job_name = '$jobName';
            END;

            -- Create the job
            EXEC msdb.dbo.sp_add_job
              @job_name = '$jobName',
              @enabled = 1;

            -- Add job step to run SSIS package
            EXEC msdb.dbo.sp_add_jobstep
              @job_name = '$jobName',
              @step_name = 'Run SSIS Package',
              @subsystem = 'SSIS',
              @command = '/ISSERVER ""SSISDB\\MySSISPackages\\Integration Services Project1\\$pkg.dtsx"" /SERVER ""$env:SQL_SERVER""',
              @on_success_action = 1;

            -- Add schedule to run every 1 minute
            DECLARE @schedule_id INT;
            EXEC msdb.dbo.sp_add_schedule
              @schedule_name = '$scheduleName',
              @enabled = 1,
              @freq_type = 4,                -- Daily
              @freq_interval = 1,            -- Every 1 day
              @freq_subday_type = 4,         -- Minutes
              @freq_subday_interval = 1,     -- Every 1 minute
              @active_start_time = 000000,   -- Start at midnight
              @schedule_id = @schedule_id OUTPUT;

            -- Attach schedule to job
            EXEC msdb.dbo.sp_attach_schedule
              @job_name = '$jobName',
              @schedule_name = '$scheduleName';

            -- Add job to local server
            EXEC msdb.dbo.sp_add_jobserver
              @job_name = '$jobName';
            "

            Invoke-Sqlcmd -ServerInstance $env:SQL_SERVER -Query $jobScript
            echo "✅ Created job and schedule for package: $pkg"
          }

          echo "✅ All SQL Agent jobs and schedules created successfully."
